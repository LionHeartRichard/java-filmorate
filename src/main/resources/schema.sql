CREATE TABLE IF NOT EXISTS FILM (
  FILM_ID BIGINT NOT NULL AUTO_INCREMENT,
  NAME CHARACTER VARYING(50) NOT NULL,
  DESCRIPTION CHARACTER VARYING(200),
  RELEASE_DATE DATE,
  DURATION INTEGER,
  MPA_ID BIGINT,
  CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID)
);

CREATE TABLE IF NOT EXISTS PERSON (
  PERSON_ID BIGINT NOT NULL AUTO_INCREMENT,
  EMAIL CHARACTER VARYING(100) NOT NULL,
  LOGIN CHARACTER VARYING(50) NOT NULL,
  NAME CHARACTER VARYING(100) NOT NULL,
  BIRTHDAY DATE,
  CONSTRAINT PERSON_PK PRIMARY KEY (PERSON_ID),
  CONSTRAINT UNIQ_EMAIL UNIQUE (EMAIL)
);

CREATE TABLE IF NOT EXISTS FILM_PERSON (
	FILM_PERSON_ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT NOT NULL,
	PERSON_ID BIGINT NOT NULL,
	CONSTRAINT LIKE_PK PRIMARY KEY (FILM_PERSON_ID),
	CONSTRAINT LIKE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
	CONSTRAINT LIKE_PERSON_FK FOREIGN KEY (PERSON_ID) REFERENCES PUBLIC.PERSON(PERSON_ID)
);

CREATE TABLE IF NOT EXISTS GENRE (
	GENRE_ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50),
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
	FILM_GENRE_ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT NOT NULL,
	GENRE_ID BIGINT NOT NULL,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_GENRE_ID),
	CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
	CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS MPA (
	ID BIGINT NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50),
	CONSTRAINT MPA_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS FRIEND (
  FRIEND_ID BIGINT NOT NULL AUTO_INCREMENT,
  ID BIGINT NOT NULL,
  OTHER_ID BIGINT NOT NULL,
  CONSTRAINT FRIEND_PK PRIMARY KEY (FRIEND_ID),
  CONSTRAINT FRIEND_PERSON_FK FOREIGN KEY (ID) REFERENCES PUBLIC.PERSON(PERSON_ID),
  CONSTRAINT FRIEND_PERSON_FK_1 FOREIGN KEY (OTHER_ID) REFERENCES PUBLIC.PERSON(PERSON_ID)
);

CREATE TABLE IF NOT EXISTS REVIEWS (
    REVIEW_ID BIGINT AUTO_INCREMENT,
    CONTENT VARCHAR,
    USER_ID BIGINT NOT NULL,
    FILM_ID BIGINT NOT NULL,
    IS_POSITIVE BOOLEAN,
    USEFUL INT,
    CONSTRAINT REVIEW_PK PRIMARY KEY (REVIEW_ID),
    CONSTRAINT USER_ID_REVIEW_FK FOREIGN KEY (USER_ID) REFERENCES PERSON(PERSON_ID) ON DELETE CASCADE,
    CONSTRAINT FILM_ID_REVIEW_FK FOREIGN KEY (FILM_ID) REFERENCES FILM(FILM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS REVIEW_LIKES (
    REVIEW_ID BIGINT NOT NULL,
    USER_ID BIGINT NOT NULL,
    IS_LIKE BOOLEAN NOT NULL,

    PRIMARY KEY (REVIEW_ID, USER_ID),
    FOREIGN KEY (REVIEW_ID) REFERENCES REVIEWS(REVIEW_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES PERSON(PERSON_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS DIRECTOR (
    DIRECTOR_ID BIGINT NOT NULL AUTO_INCREMENT,
    NAME CHARACTER VARYING(50),
    CONSTRAINT DIRECTOR_PK PRIMARY KEY (DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTOR (
	FILM_DIRECTOR_ID BIGINT NOT NULL AUTO_INCREMENT,
	FILM_ID BIGINT NOT NULL,
	DIRECTOR_ID BIGINT NOT NULL,
	CONSTRAINT FILM_DIRECTOR_PK PRIMARY KEY (FILM_DIRECTOR_ID),
	CONSTRAINT FILM_DIRECTOR_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID),
	CONSTRAINT FILM_DIRECTOR_DIRECTOR_FK FOREIGN KEY (DIRECTOR_ID) REFERENCES PUBLIC.DIRECTOR(DIRECTOR_ID)
);
